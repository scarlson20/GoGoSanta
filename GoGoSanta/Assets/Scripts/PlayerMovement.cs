using System.Collections; using System.Collections.Generic; using UnityEngine; using UnityEngine.SceneManagement;  public class PlayerMovement : MonoBehaviour {

    private SoundManager soundMan;     public float speed;     public Rigidbody myRigidBody;     public int lives;     private bool currentlyHit = false;     public bool canMove;     private bool playedDeathSound = false;  // Used to prevent looping of DeathSound     private bool backgroundMusicPlaying = false;      // Start is used for initialization     void Start () {         canMove = true;         myRigidBody = GetComponent<Rigidbody>();         myRigidBody.freezeRotation = true;  // Prevent santa from rotating after colliding with another object or boundary         lives = 3;         soundMan = FindObjectOfType<SoundManager>();     }       // Update is called once per frame  void Update () {         if (lives <= 0)
        {             // Player falls to the street and stops moving after losing all lives             myRigidBody.useGravity = true;             myRigidBody.freezeRotation = false;             PresentShooter.canShoot = false;             StartCoroutine("StopMovement");             soundMan.backgroundMusic.Stop();             if (!playedDeathSound)             {                 soundMan.santaDies.Play();                 playedDeathSound = true;             }           }         if (lives > 0 && backgroundMusicPlaying == false){             soundMan.backgroundMusic.Play();             backgroundMusicPlaying = true;         }          if (canMove) {             float moveH = Input.GetAxis("Horizontal");             float moveV = Input.GetAxis("Vertical");              //Moves sleigh based on arrow key input             if (moveH > 0f || moveH < 0f)             {                 transform.Translate(new Vector3(0, moveH * -speed * Time.deltaTime, 0));             }             if (moveV > 0f || moveV < 0f)             {                 transform.Translate(new Vector3(0, 0, moveV * speed * Time.deltaTime));             }             // Player is always moving forward             transform.Translate(Vector3.left * speed * Time.deltaTime);         }     }      //OnTriggerEnter deals with obstacle collision and counting lives     private void OnTriggerEnter(Collider other)     {         // Lose a life after hitting an obstacle         if (!currentlyHit) {
            if (other.CompareTag("Obstacle"))             {                 lives = lives - 1;                 StartCoroutine("ColorFlasher");                 soundMan.lifeLost.Play();             }         }         // Loads menu screen at end of level         if (other.CompareTag("EndOfLevel")) {             if (LevelInfo.level == 2 && LevelInfo.score > 200) {                 SceneManager.LoadScene("Screen_EndOfGame");             } else{                 SceneManager.LoadScene("Screen_EndOfLevel");             }         }     }      // Flashed colors of sleigh to signify player was hit     private IEnumerator ColorFlasher() {         currentlyHit = true;         for (int i = 0; i < 5; i++) {             Renderer myRenderer = GetComponent<Renderer>();             myRenderer.material.color = Color.red;             yield return new WaitForSeconds(.1f);             myRenderer.material.color = Color.white;             yield return new WaitForSeconds(.1f);         }         currentlyHit = false;     }      // Player can no longer move after death     private IEnumerator StopMovement() {         yield return new WaitForSeconds(3f);         canMove = false;     }  }
